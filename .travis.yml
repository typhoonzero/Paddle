language: cpp
cache:
  directories:
    - $HOME/third_party
    - $HOME/.ccache
    - $HOME/.cache/pip
sudo: required
services: 
    - docker
dist: trusty
os:
  - linux
env:
  matrix:
    - JOB=DOCS
    - JOB=BUILD_AND_TEST
    - JOB=PRE_COMMIT
  global:
    - secure: "nQdC5nGHfVUgoFaTN9HaCGminFgiIFXSbK7sSlBasVLrChVVRB0UZKtTnhavgiNa9rnCSIFHWiIJTZHkM+58fOzT8XGE/+YNr3klhLGoiNSTO7kgHc9+q07J7QGdoyfqTy5IJg7QXwgS3CYOan6W7L8WHy/Ms6LpsPm+ZeqOu1b2Fbqev/Agga+UJU1du5iuaAnFCo5CdpB1pIQ21YPAUh4CuVsXeJUAiF8wqAjTs1Mse4iLP4peQjpvyzQf2GX3zHv3Jbx7aG4raN26nD8i9z+janRTMbFTd33yG/sUGOF5EZ/kkUh2RIrHGD9UfpImVjD3pj5ghJ+ojWkG27sbLVmEiaptb+n/B3SAGznivlLxUllSiylcpJ1/MRz6DB0N4EcroxPpDfmnlaFz6WZbdtRURA83gOXeLRWKQZPLWBbHwyqZDXdyb08As5tMlchTdyw1r4Au61HOTtrw9h/zJCdsV+T2echDZcEqdZd3WoIyyZQZdoFRuoKPIcTN/uaL71mCfpswPVQ3YdflJtkc1zTQxhQomb9PUJZgKI2b+tagz/lpBMHjMpjQxJnOdHLto/pbauvi38kC6VPJiwClQ8mTsibWhPovTI0DmT3OjwbLUnCqo3AsMdu1QDu7uqGszfH/pwQwQ9yufmlNkEUmvgSPGD4YxWUVRVkjb4u/mFs="  # DOCKER_EMAIL
    - secure: "trVeaDBFRK8D5GSWbpc5XkQaaYcDAMZkk7vOjrPHAP9igrsYe9NBioSwE6QGJnbS25Wy1HC14MYcXZReF+RR3zVN69xiDREwAS+56TC05FYc6LOrITx42mEZZ59ud30bLg6Gk70OHE/0szclmXhIGLyDw4Tn9UMfk//RO5xU75ZHQapNrVyXC4WkdrxsXxgimef3j8liU/otjZAZ+Wt3n3rSMYzFfygflsIMtPtwk7MSjCuO7ACLic8t05rpA+4MeddT9uJxIetuoL1CUSy6jJjNzvU3hCOA537taUGJsmXyDrrl2vVWJDJdzDoUglLSGKQy/aG6exGQu2LYHnnX97LbRpl+Q9GNek2fCYLUFMafFBA1QAJyTUvaZDLNs/QvPxohMRitHuaX+wvAlgTOvkJKziK7RTBDg+nYC3c2xES273vMqOyHb994yK0Uja6/1jA8AA5KmVNVDvaMEDDRRafYS5sdlVuH5o+jl99O20MPUp/1ffIrQl37EW1C8S2NCxhInz6ObhXl84BcYeNIyrF4vtaZOZVcjaLepxgyzQxqRFJoBBClSwmuO8JrwPhHRGex1onhbJB5LUx+BMzDwRZdozgv8kvK1xVFfXFFwYvSN3x0V+iacT7GnHooBfYa5yee4/hjRTLVRK8bFSpDi9gJerdSB7fopUJFwH/ZPq0="
    - secure: "rF42ianm232JnTJ2/hrIAnM7jVV45xEh7zdb8rt6xlCiKBP6k+k8qXaMIi1/Mdlc3jSluRRn6d/n0QOVGaGgESW34xRYeuQTwePRQXOA7N6MKTjzblYqR9DbA5DqO1Bm8hAj66gwBlNJ45gTDRsKxvQvEQYC7Ga5AS0GVu0fiRXbQ7CMZI2JmfvmZk1d1T033V5n+Dqxz+4ZtAe55lAW1bkOWFoAcvwMw9Ou7JUL96kFhjJgy3C/Yh2RrELfr4VusapgmjaVWSG5DzeYGE3XNBsd68quT4O+CxQYBuxhztWED6SVGMYSTqjTrmhcUAFn+lU43f/XcQPRTyOBoudCPjnEjFlRz+Wt7FjiIr5CxPQN3PK+jXu8mTgvwIn7BDU+wNksBLNKej5UyndxgN1xNZNFiRUq5kcyWJCn8NvWmUN82asnghHq2IHg4Nssl95eLbmN1gUCjHu50suzoqY0ZFMY+sCq+/YIbK9u6CCTgiWOEnm1xYJMqOFKSZDGCBlWMB+6Uo/czrBy6ZbYXKNVct+K3Y6evuyzEx3FbHsYfGM+23I2qFItJ9HL+X7RLgV/yvghiV8NJ2T0ec7hm/2VpKRv9f83M333dnkd3dNiPLn5fAVNwudhklt2odz1ihOWpBL4NupzYik0TMyJjMX2NrCuFW5dQkvCJXZtU1Xu3Ic="

addons:
  apt:
    packages:
      - gcc-4.8
      - g++-4.8
      - gfortran-4.8
      - git
      - build-essential
      - python
      - python-pip
      - python2.7-dev
      - python-numpy
      - python-wheel
      - curl
      - swig
      - graphviz
      - clang-format-3.8
      - automake
      - libtool
      - ccache
before_install:
  - |
    if [ ${JOB} == "BUILD_AND_TEST" ]; then
      local change_list=`git diff --name-only $TRAVIS_COMMIT_RANGE`
      if [ $? -eq 0 ]; then  # if git diff return no zero, then rerun unit test.
        if ! echo ${change_list} | grep -qvE '(\.md$)|(\.rst$)|(\.jpg$)|(\.png$)'
        then
          echo "Only markdown docs were updated, stopping build process."
          exit
        fi
      fi
    fi
  - if [[ "$JOB" == "PRE_COMMIT" ]]; then sudo ln -s /usr/bin/clang-format-3.8 /usr/bin/clang-format; fi
  # Paddle is using protobuf 3.1 currently. Protobuf 3.2 breaks the compatibility. So we specify the python 
  # protobuf version.
  - pip install numpy wheel 'protobuf==3.1' sphinx recommonmark sphinx-rtd-theme==0.1.9 virtualenv pre-commit requests==2.9.2 LinkChecker
script:
  #- paddle/scripts/travis/main.sh
  - echo "fake build..."
notifications:
  email:
    on_success: change
    on_failure: always
after_success:
  - export REPO1=typhoon1986/paddle
  - export REPO2=typhoon1986/paddle
  - export REPO3=typhoon1986/paddle
  - export TAG=`if [ "$TRAVIS_BRANCH" == "develop" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
  # do docker build only when this build is for a git tag, tag must be in for form: 0.10.0rc2
  - if [[ "$TRAVIS_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+((a|b|rc)[0-9]+)$ ]]; then
    docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS;
    docker build -t paddle:dev .;
    docker run -v $PWD:/paddle -e "WITH_GPU=OFF" -e "WITH_AVX=ON" -e "TEST=OFF" -e "PADDLE_VERSION=${TRAVIS_TAG}" paddle:dev;
    docker build -t paddle:latest -f build/Dockerfile .;
    docker run -v $PWD:/paddle -e "WITH_GPU=ON" -e "WITH_AVX=ON" -e "TEST=OFF" -e "PADDLE_VERSION=${TRAVIS_TAG}" -e "DELETE_BUILD_CACHE=OFF" paddle:dev;
    docker build -t paddle:gpu -f build/Dockerfile .;
    docker run -v $PWD:/paddle -e "WITH_GPU=OFF" -e "WITH_AVX=OFF" -e "TEST=OFF" -e "PADDLE_VERSION=${TRAVIS_TAG}" -e "DELETE_BUILD_CACHE=OFF" paddle:dev;
    docker build -t paddle:noavx -f build/Dockerfile .;
    docker run -v $PWD:/paddle -e "WITH_GPU=ON" -e "WITH_AVX=OFF" -e "TEST=OFF" -e "PADDLE_VERSION=${TRAVIS_TAG}" -e "DELETE_BUILD_CACHE=OFF" paddle:dev;
    docker build -t paddle:gpu-noavx -f build/Dockerfile .;
    for image in "paddle:dev" "paddle:latest" "paddle:gpu" "paddle:noavx" "paddle:gpu-noavx";
    do
        for r in $REPO1 $REPO2 REPO3;
        do
            repo=$(cat $image | awk -F: '{print $1}');
            localtag=$(cat $image | awk -F: '{print $2}');
            docker tag $image $r:$TRAVIS_TAG-$localtag;
            docker push $r:$TRAVIS_TAG-$localtag;
            docker tag $image $r:localtag;
            docker push $r:localtag;
        done
    done
    fi

