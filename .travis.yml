language: cpp
cache:
  directories:
    - $HOME/third_party
    - $HOME/.ccache
    - $HOME/.cache/pip
sudo: required
services: 
    - docker
dist: trusty
os:
  - linux
env:
  matrix:
    - JOB=DOCS
    - JOB=BUILD_AND_TEST
    - JOB=PRE_COMMIT
  global:
    - secure: "nQdC5nGHfVUgoFaTN9HaCGminFgiIFXSbK7sSlBasVLrChVVRB0UZKtTnhavgiNa9rnCSIFHWiIJTZHkM+58fOzT8XGE/+YNr3klhLGoiNSTO7kgHc9+q07J7QGdoyfqTy5IJg7QXwgS3CYOan6W7L8WHy/Ms6LpsPm+ZeqOu1b2Fbqev/Agga+UJU1du5iuaAnFCo5CdpB1pIQ21YPAUh4CuVsXeJUAiF8wqAjTs1Mse4iLP4peQjpvyzQf2GX3zHv3Jbx7aG4raN26nD8i9z+janRTMbFTd33yG/sUGOF5EZ/kkUh2RIrHGD9UfpImVjD3pj5ghJ+ojWkG27sbLVmEiaptb+n/B3SAGznivlLxUllSiylcpJ1/MRz6DB0N4EcroxPpDfmnlaFz6WZbdtRURA83gOXeLRWKQZPLWBbHwyqZDXdyb08As5tMlchTdyw1r4Au61HOTtrw9h/zJCdsV+T2echDZcEqdZd3WoIyyZQZdoFRuoKPIcTN/uaL71mCfpswPVQ3YdflJtkc1zTQxhQomb9PUJZgKI2b+tagz/lpBMHjMpjQxJnOdHLto/pbauvi38kC6VPJiwClQ8mTsibWhPovTI0DmT3OjwbLUnCqo3AsMdu1QDu7uqGszfH/pwQwQ9yufmlNkEUmvgSPGD4YxWUVRVkjb4u/mFs="  # DOCKER_EMAIL
    - secure: "LeMMn7lgvGss2xn9Y9PNGYdsz+aOvfqXuMGV1H8kREj2OSblbTmVFM2JpMKyCKvNsjsA9RdX+y8h2iF6LZcjr8uAblZFYFbyWt02RecrLglXrt/sjnJMX2gBmLroYymmeXsKngdAyMrpCeaP+d8Eas5xOdthEWbulyYQrv51JIa/h22zpQS6tcP7/PmPSsQt9kIn6rhhxBf6O/sizxhtlRzSMhbmqkfiaJFr5fIULwzLRWOfQrkjbpGnYnOUqleKbwqnf3LTp7mzCTT+5PtFpRn2IyVExX0UnGK3T0mG1YkTsx88R1RwGee9eChzwqQ8dEQxrQZ9C6IvJ9Rtaj9FarNMfbrc2WQ3N0KhBFmVz7v74GuB1w2aYLTACD2gblY7EiYu90DsrJvZohC4QoTcvtA2aamDBU4iCJRw+q0jTH4bpqgn3SPY91sNmd6WNvlwZAY8oZrCrtiwfIrNSXOXYKmZMPSzJo4xAp3jFMRhtubXFVJ8gJIvZ/ElIydSjg1+SUpsRhBoD7TDGSepyu7RZZzdtksDb9FHW461Vtwf0P7dTS//7hMQdvv377UgbL5X980dLvqPoy9862k2XxTQbQsMjxA6+gZALS9LzWhUoWqQ9OeDh0BSb9Z1XQQy9zZAe3jd9h3s2JwiAhJAAsokSOTqJQbarJd+8EyT5dcUIjc="
    - secure: "JkgriulVw8Q84f7L0/vb54H+vxSr3+UFqhf0t48Lvjqca19Sjy4MQvqRClhCHj4Be5VITCyiGzWUQRWuByoBVj86GCIG0chSc/13fAtBo3VmAKWyMu6chV2u5Wr8/N4cmVnbUkd7gyRi4PKk7g8RA9nEJWlGTNONYLR1efOyPaS//cHUVacsz9TyrMm5lwz4h3VpvzXthQbFPq5Q4OWgpKkdGQyYRx2VZ3QV4UufUvdi/pZH57CeN/9TOw4KSF8kaAgkKXWWasrsGTQc8XKlSRRg/7sfb1n7t2gsSN18aIZ/jKKaurk8/KrU7jgAJIiy4bqDXVmwPiTL0f292u/Q3wlfsWDmGx96QEvtvvU9GjouJnssYT/y3Z+ZdZwNbfAzY/VM+/jXERWma/VwSxAWLXC9ppp+VffapDHUZT8L/ysmjmEDq5JuIRAnT7ARJxo3g3xe/iIKEFbepmTaRIrJPbXdh3vnvnpaXhHkpO6DoqxoYD5pWvhHRSkBLVoMojNTw873BFhVknzndQdTsv4QoHSWPSWRh7a0JuCOJRTzKLS2zswsiwz08qF0jt8Qh0yX4R4SmKrX4xwA+OrHkpOcEck8KtS9C8nbiEHf3Vey5MgB/kplw/f8tSwDVa7h4R2UibTT4McqXZfnFAhA8uW00AMoTHKdmylZ+aQYKTtv3Qk="
addons:
  apt:
    packages:
      - gcc-4.8
      - g++-4.8
      - gfortran-4.8
      - git
      - build-essential
      - python
      - python-pip
      - python2.7-dev
      - python-numpy
      - python-wheel
      - curl
      - swig
      - graphviz
      - clang-format-3.8
      - automake
      - libtool
      - ccache
before_install:
  - |
    if [ ${JOB} == "BUILD_AND_TEST" ]; then
      local change_list=`git diff --name-only $TRAVIS_COMMIT_RANGE`
      if [ $? -eq 0 ]; then  # if git diff return no zero, then rerun unit test.
        if ! echo ${change_list} | grep -qvE '(\.md$)|(\.rst$)|(\.jpg$)|(\.png$)'
        then
          echo "Only markdown docs were updated, stopping build process."
          exit
        fi
      fi
    fi
  - if [[ "$JOB" == "PRE_COMMIT" ]]; then sudo ln -s /usr/bin/clang-format-3.8 /usr/bin/clang-format; fi
  # Paddle is using protobuf 3.1 currently. Protobuf 3.2 breaks the compatibility. So we specify the python 
  # protobuf version.
  - pip install numpy wheel 'protobuf==3.1' sphinx recommonmark sphinx-rtd-theme==0.1.9 virtualenv pre-commit requests==2.9.2 LinkChecker
script:
  #- paddle/scripts/travis/main.sh
  - echo "fake build..."
notifications:
  email:
    on_success: change
    on_failure: always
after_success:
  - export REPO1=typhoon1986/paddle
  - export REPO2=typhoon1986/paddle
  - export REPO3=typhoon1986/paddle
  - export TAG=`if [ "$TRAVIS_BRANCH" == "develop" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
  - if [[ "$TRAVIS_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+((a|b|rc)[0-9]+)$ ]] && [ $JOB == "DOCS" ]; then
    docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS;
    docker build -t paddle:dev .;
    docker run -v $PWD:/paddle -e "WITH_GPU=OFF" -e "WITH_AVX=ON" -e "TEST=OFF" -e "PADDLE_VERSION=${TRAVIS_TAG}" paddle:dev;
    docker build -t paddle:latest -f build/Dockerfile .;
    docker run -v $PWD:/paddle -e "WITH_GPU=ON" -e "WITH_AVX=ON" -e "TEST=OFF" -e "PADDLE_VERSION=${TRAVIS_TAG}" -e "DELETE_BUILD_CACHE=OFF" paddle:dev;
    docker build -t paddle:gpu -f build/Dockerfile .;
    docker run -v $PWD:/paddle -e "WITH_GPU=OFF" -e "WITH_AVX=OFF" -e "TEST=OFF" -e "PADDLE_VERSION=${TRAVIS_TAG}" -e "DELETE_BUILD_CACHE=OFF" paddle:dev;
    docker build -t paddle:noavx -f build/Dockerfile .;
    docker run -v $PWD:/paddle -e "WITH_GPU=ON" -e "WITH_AVX=OFF" -e "TEST=OFF" -e "PADDLE_VERSION=${TRAVIS_TAG}" -e "DELETE_BUILD_CACHE=OFF" paddle:dev;
    docker build -t paddle:gpu-noavx -f build/Dockerfile .;
    for image in "paddle:dev" "paddle:latest" "paddle:gpu" "paddle:noavx" "paddle:gpu-noavx";
    do
        for r in $REPO1 $REPO2 $REPO3;
        do
            repo=$(cat $image | awk -F":" '{print $1}');
            localtag=$(cat $image | awk -F":" '{print $2}');
            docker tag $image $r:$TRAVIS_TAG-$localtag;
            docker push $r:$TRAVIS_TAG-$localtag;
            docker tag $image $r:localtag;
            docker push $r:localtag;
        done
    done
    fi

